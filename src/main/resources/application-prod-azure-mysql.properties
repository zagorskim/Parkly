# Description how to deploy to aws https://www.callicoder.com/deploy-host-spring-boot-apps-on-aws-using-elastic-beanstalk/
# Description how to connect pgAdmin to remote db https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html

# Listen on the port passed through `PORT` environment variable (Fallback to 8080)
#server.port= ${PORT:8080}
server.port= 5000

spring.datasource.url= jdbc:mysql://${mysql.hostname}:${mysql.port}/${mysql.db.name}?useSSL=true&requireSSL=true&verifyServerCertificate=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
spring.datasource.username= ${mysql.username}
spring.datasource.password= ${mysql.password}
spring.sql.init.mode= always
spring.sql.init.continue-on-error= true
spring.sql.init.platform= mysql
#if you want to upload test data create data.sql. if below is uncommented then data.sql will be executed
spring.sql.init.schema-locations= classpath:/sql/schema-${spring.datasource.platform}.sql

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL8Dialect
# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= none
spring.jpa.show-sql= true
spring.jpa.generate-ddl= true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true

## MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled= true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold= 2KB
# Max file size.
spring.servlet.multipart.max-file-size= 200MB
# Max Request Size
spring.servlet.multipart.max-request-size= 215MB

# Actuator
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.loggers.enabled=true
management.endpoint.beans.enabled=true
management.endpoint.logfile.enabled=true
# http://localhost:8080/actuator/env/spring.profiles.active
management.endpoint.env.enabled=true
management.endpoints.web.exposure.include=health,loggers,beans,env,logfile

# Loggers
logging.level.root=INFO
logging.level.pw.react.backend.services=INFO

# CORS
cors.urls=${cors.urls}
cors.mappings=/**

# spring-doc
application.springdoc.title=Backend PW API
application.springdoc.description=Backend starter for PW project.
application.springdoc.version=@project.version@
springdoc.show-actuator=true
#springdoc.swagger-ui.path=/swagger-ui-custom.html
#springdoc.swagger-ui.operationsSorter=method

# http://localhost:8080/swagger-ui.html
# JSON based API-docs - http://localhost:8080/v3/api-docs.
# For YAML based API-docs use  http://localhost:8080/v3/api-docs.yaml